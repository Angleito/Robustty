import { NekoInstance, Cookie } from '../domain/types';
import { RedisClient } from './RedisClient';
import { EventEmitter } from 'events';
export declare class NekoInstanceImpl extends EventEmitter implements NekoInstance {
    id: string;
    isAuthenticated: boolean;
    currentVideo: string | null;
    private ws?;
    private redis;
    private lastUsed;
    private nekoUrl;
    private nekoPassword;
    private nekoUsername;
    private reconnectTimer?;
    private reconnectAttempts;
    private maxReconnectAttempts;
    private reconnectDelay;
    private pingInterval?;
    private heartbeatInterval?;
    private hasControl;
    private sessionId?;
    private controlHost?;
    constructor(id: string, redis: RedisClient);
    initialize(): Promise<void>;
    private connect;
    private authenticate;
    private handleMessage;
    private send;
    private requestControl;
    private releaseControl;
    private sendMouseMove;
    private sendMouseClick;
    private sendKey;
    private sendText;
    private navigate;
    playVideo(url: string): Promise<void>;
    pause(): Promise<void>;
    resume(): Promise<void>;
    seekTo(seconds: number): Promise<void>;
    getAuthCookies(): Promise<Cookie[]>;
    restoreSession(cookies: Cookie[]): Promise<void>;
    healthCheck(): Promise<boolean>;
    restart(): Promise<void>;
    shutdown(): Promise<void>;
    getLastUsed(): number;
    private scheduleReconnect;
    private startPingInterval;
    private stopPingInterval;
    private startHeartbeat;
    private stopHeartbeat;
}
//# sourceMappingURL=NekoInstanceImpl.d.ts.map